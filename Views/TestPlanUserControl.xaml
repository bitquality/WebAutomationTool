<UserControl x:Class="CommandTestAutomation.Views.TestPlanUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             xmlns:vm="clr-namespace:CommandTestAutomation.ViewModels"
             xmlns:converters="clr-namespace:CommandTestAutomation.Helpers"
             xmlns:models = "clr-namespace:CommandTestAutomation.Models"
             xmlns:interfaces="clr-namespace:CommandTestAutomation.Interfaces"
             xmlns:uControls="clr-namespace:CommandTestAutomation.Views"
             xmlns:interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">
    
    
    <UserControl.Resources>
        <converters:BindingProxy  x:Key="DataContextProxy" Data="{Binding}" />
        <converters:PathConverter x:Key="iconConverter"/>
        <converters:RowNumberConverter x:Key="rowToIndexConverter" />
        <converters:ContextMenuConverter x:Key="contextMenuConverter" />
        <converters:IsNullConverter x:Key="isNullConverter" />
        <converters:INodeToVisibilityConverter x:Key="nodeToVisibilityConverter"/>
        <Thickness x:Key="tbMargin">0,10,0,0</Thickness>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="F2" Command="{Binding EditNodeClickCommand}" />
        <KeyBinding Key="Enter" Command="{Binding CommitEditClickCommand}" />
       
    </UserControl.InputBindings>
    <DockPanel>
        <StackPanel Orientation="Horizontal">
                <!--Test plan treeview-->
                <converters:ExtendedTreeView  ItemsSource="{Binding  Path=ProjectData,Mode=TwoWay}" 
                                              Width="200"  x:Name="myTestPlanTree" 
                                              
                                              SelectedItem_ = "{Binding SelectedTestPlanTreeViewItem, Mode=TwoWay}">
                <!--ItemContainerStyle="{StaticResource treeViewDictionary}"-->
                <TreeView.Resources>
                      
                  
                    <DataTemplate x:Key="NormalTemplate">

                        <StackPanel Orientation="Horizontal">
                            <Image Width="16" Height="16" Margin="0,0,3,0" x:Name="iconTreeItem" />
                            <TextBlock Text="{Binding NodeName, Mode=TwoWay}" />
                        </StackPanel>

                        <DataTemplate.Triggers>

                            <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                    Converter={StaticResource isNullConverter}}" Value="False">
                                <Setter TargetName="iconTreeItem" Property="Source">
                                    <Setter.Value>
                                        <Binding  Converter="{StaticResource iconConverter}">
                                            <Binding.FallbackValue>
                                                <ImageSource>
                                                    ../Images/Unknown.png
                                                </ImageSource>
                                            </Binding.FallbackValue>
                                        </Binding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                        </DataTemplate.Triggers>


                    </DataTemplate>

                    <DataTemplate x:Key="EditTemplate">
                        <StackPanel Orientation="Horizontal">
                            <Image Width="16" Height="16" Margin="0,0,3,0" x:Name="iconTreeItem" />
                            <TextBox Text="{Binding NodeName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding CommitEditClickCommand,RelativeSource={RelativeSource AncestorType=TreeViewItem}}" />
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <!--<DataTrigger Binding="{Binding Path=NodeType}" Value="Element">-->
                            <DataTrigger Binding="{Binding Path=IsInEditMode,RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                    Converter={StaticResource isNullConverter}}" Value="True">
                                <Setter TargetName="iconTreeItem" Property="Source">
                                    <Setter.Value>
                                        <Binding Path="Name"  Converter="{StaticResource iconConverter}">
                                            <Binding.FallbackValue>
                                                <ImageSource>
                                                    ../Images/Unknown.png
                                                </ImageSource>
                                            </Binding.FallbackValue>
                                        </Binding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                        </DataTemplate.Triggers>
                    </DataTemplate>

                    <!--  Begin Context Menu  -->
                    <ContextMenu x:Key="RootMenu" Style="{StaticResource contextMenuStyle}">
                            <MenuItem Command="{Binding Path=Data.AddProjectClickCommand, Source={StaticResource DataContextProxy}}" >
                                <MenuItem.Header  >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" Margin ="0,0,3,0" Source="../Images/Project.png" />
                                        <ContentPresenter Content="New Project" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                    </ContextMenu>
                    <ContextMenu x:Key="ProjectMenu" Style="{StaticResource contextMenuStyle}">

                            <MenuItem Command="{Binding Path=Data.AddFolderClickCommand, Source={StaticResource DataContextProxy}}" >
                                <MenuItem.Header  >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" Margin ="0,0,3,0" Source="../Images/AddFolder.png" />
                                        <ContentPresenter Content="New Folder" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Command="{Binding Path=Data.EditNodeClickCommand, Source={StaticResource DataContextProxy}}" >
                                <MenuItem.Header  >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" Margin ="0,0,3,0" Source="../Images/Edit.png" />
                                        <ContentPresenter Content="Rename Project" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Command="{Binding Path=Data.DeleteNodeClickCommand, Source={StaticResource DataContextProxy}}" >
                            <MenuItem.Header  >
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="16" Height="16" Margin ="0,0,3,0" Source="../Images/Delete.png" />
                                    <ContentPresenter Content="Remove Project" />
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                    </ContextMenu>
                    <ContextMenu x:Key="FolderMenu" Style="{StaticResource contextMenuStyle}">
                            <MenuItem Command="{Binding Path=Data.AddFolderClickCommand, Source={StaticResource DataContextProxy}}" >
                                <MenuItem.Header  >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" Margin ="0,0,3,0" Source="../Images/AddFolder.png" />
                                        <ContentPresenter Content="New Folder" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Command="{Binding Path=Data.AddTestCaseClickCommand, Source={StaticResource DataContextProxy}}" >
                                <MenuItem.Header  >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" Margin ="0,0,3,0" Source="../Images/TestCase.png" />
                                        <ContentPresenter Content="Add TestCase" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Command="{Binding Path=Data.EditNodeClickCommand, Source={StaticResource DataContextProxy}}" >
                                <MenuItem.Header  >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" Margin ="0,0,3,0" Source="../Images/Edit.png" />
                                        <ContentPresenter Content="Rename Folder" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Command="{Binding Path=Data.DeleteNodeClickCommand, Source={StaticResource DataContextProxy}}" >
                                 <MenuItem.Header  >
                                     <StackPanel Orientation="Horizontal">
                                          <Image Width="16" Height="16" Margin ="0,0,3,0" Source="../Images/Delete.png" />
                                         <ContentPresenter Content="Remove Folder" />
                                     </StackPanel>
                                  </MenuItem.Header>
                             </MenuItem>
                      
                        
                    </ContextMenu>
                    <ContextMenu x:Key="TestCaseMenu" Style="{StaticResource contextMenuStyle}">
                            <MenuItem Command="{Binding Path=Data.EditNodeClickCommand, Source={StaticResource DataContextProxy}}" >
                                <MenuItem.Header  >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" Margin ="0,0,3,0" Source="../Images/Edit.png" />
                                        <ContentPresenter Content="Rename TestCase" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <Separator/>
                             <MenuItem Command="{Binding Path=Data.DeleteNodeClickCommand, Source={StaticResource DataContextProxy}}" >
                            <MenuItem.Header  >
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="16" Height="16" Margin ="0,0,3,0" Source="../Images/Delete.png" />
                                    <ContentPresenter Content="Remove Test Case" />
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>

                    </ContextMenu>
                     <converters:ContextMenuConverter x:Key="contextMenuConverter" 
                                                RootMenu="{StaticResource RootMenu}"
                                                ProjectMenu="{StaticResource ProjectMenu}"
                                                FolderMenu="{StaticResource FolderMenu}"
                                                FileMenu="{StaticResource TestCaseMenu}"/>

                  
                    
                </TreeView.Resources>
                <TreeView.ItemContainerStyle >
                     <!--binds contextmenu to ui-->

                    <Style TargetType="{x:Type TreeViewItem}" >
                        <Setter Property="ContextMenu" Value="{Binding Converter={StaticResource contextMenuConverter}}"/>
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />                        
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                       
                        <Setter Property="FontWeight" Value="Normal" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                            
                        </Style.Triggers>
                    </Style>
                  
                </TreeView.ItemContainerStyle>
                    
                <TreeView.ItemTemplate >
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type interfaces:INode}">                       
                              <ContentPresenter Content="{Binding}">
                                  <ContentPresenter.Style>
                                     <Style TargetType="{x:Type ContentPresenter}">
                                        <Setter Property="ContentTemplate"  Value="{StaticResource   NormalTemplate}"/>
                                      <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsInEditMode,Mode=TwoWay}" Value="True" />
                                                <!--<Condition Binding="{Binding IsSelected,Mode=TwoWay}" Value="False" />-->
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ContentTemplate" Value="{StaticResource EditTemplate}" />
                                        </MultiDataTrigger>                                       
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Style>
                        </ContentPresenter>
                       </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
            </converters:ExtendedTreeView>    
           
            <!--  View selectedtreeview item details-->
            <StackPanel Visibility="{Binding Converter={StaticResource nodeToVisibilityConverter},Path=SelectedTestPlanTreeViewItem}">
                <!--Add,Remove and Save Steps-->
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,75,0">
                   
                    <Button  x:Name="btnAddStep" Height="20" Width="40"    Style="{StaticResource stlFlatButton}"
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, 
                                    AncestorType={x:Type UserControl}}, Path=DataContext.AddTestStepClickCommand}" >
                        <Image Source="../Images/Add.png" />
                    </Button>
                    <Button  x:Name="btnRemoveTestStep" Height="20" Width="40"    Style="{StaticResource stlFlatButton}"
                                 Command="{Binding RelativeSource={RelativeSource FindAncestor, 
                                    AncestorType={x:Type UserControl}}, Path=DataContext.RemoveTestStepClickCommand}"       >

                        <Image Source="../Images/Remove.png" />
                    </Button>
                    <Button  x:Name="btnSaveTestCaseStep" Height="20" Width="40"    Style="{StaticResource stlFlatButton}"
                                 Command="{Binding RelativeSource={RelativeSource FindAncestor, 
                                    AncestorType={x:Type UserControl}}, Path=DataContext.SaveTestStepClickCommand}"       >

                        <Image Source="../Images/Save.png" />
                    </Button>

                 </StackPanel>
                
                <!--Datagrid/Table with selecteed test case steps-->
                <DataGrid x:Name="myDataGridTestSteps" CanUserDeleteRows="True" Width="900"
                          CanUserAddRows="False" CanUserResizeColumns="True" CanUserResizeRows="False"                                             
                          ItemsSource="{Binding ElementName=myTestPlanTree, Path=SelectedItem.TestStepsData,Mode=TwoWay}"                         
                          SelectedItem="{Binding SelectedTestStep, Mode=TwoWay}" AutoGenerateColumns="False" 
                          
                          EnableRowVirtualization ="False"  Margin="0,2,0.333,-2.333">
                    <DataGrid.RowHeaderStyle >
                        <Style TargetType="DataGridRowHeader">
                            <Setter Property="Width">
                                <Setter.Value>20</Setter.Value>
                            </Setter>
                            <Setter Property="Content">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource rowToIndexConverter}">
                                        <Binding />
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.RowHeaderStyle>
                    <DataGrid.Columns>

                        <!--Action name coclumn-->
                        <DataGridTemplateColumn Header="Action" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock    Text="{Binding TestStepFieldActionName}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox  ItemsSource="{Binding Path=UIFieldActions,Mode=TwoWay}" 
                                               SelectedItem="{Binding TestStepFieldActionName}"  >
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock  Text="{Binding}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        

                        <!--child treeview field for selectig uibiject column-->                      
                        <!-- or -->
                        <DataGridTemplateColumn Header="UI Object" Width="*">
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <converters:ExtendedTreeView     
                                                ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                            AncestorType={x:Type UserControl}}, Path=DataContext.ObjectMapData,Mode=TwoWay}"
                                                Width="200"  x:Name="myUIObjectTree" 
                                                SelectedItem_ = "{Binding RelativeSource={RelativeSource FindAncestor, 
                                                            AncestorType={x:Type UserControl}}, Path=DataContext.SelectedTestStep.UiFieldNodeItem,
                                                           UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <TreeView.Resources>
                                            <DataTemplate x:Key="NormalTemplate">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Width="16" Height="16" Margin="0,0,3,0" x:Name="iconTreeItem" />
                                                    <TextBlock Text="{Binding NodeName,Mode=TwoWay}" />
                                                </StackPanel>

                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                                        Converter={StaticResource isNullConverter}}" Value="False">
                                                        <Setter TargetName="iconTreeItem" Property="Source">
                                                            <Setter.Value>
                                                                <Binding  Converter="{StaticResource iconConverter}">
                                                                    <Binding.FallbackValue>
                                                                        <ImageSource>
                                                                            ../Images/Unknown.png
                                                                        </ImageSource>
                                                                    </Binding.FallbackValue>
                                                                </Binding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>

                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        
                                        </TreeView.Resources>
                                        <TreeView.ItemContainerStyle>                                            
                                            <Style TargetType="{x:Type TreeViewItem}">
                                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                                <Setter Property="FontWeight" Value="Normal" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TreeView.ItemContainerStyle>
                                        <TreeView.ItemTemplate>
                                            <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type interfaces:INode}">
                                              <ContentPresenter Content="{Binding}">
                                                    <ContentPresenter.Style>
                                                        <Style TargetType="{x:Type ContentPresenter}">
                                                            <Setter Property="ContentTemplate" Value="{StaticResource   NormalTemplate}"/>                                                           
                                                        </Style>
                                                    </ContentPresenter.Style>
                                                </ContentPresenter>
                                            </HierarchicalDataTemplate>
                                        </TreeView.ItemTemplate>
                                    </converters:ExtendedTreeView>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                            <!--now display selected treeview ui objectitem-->
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock x:Name="txtUiField" Text="{Binding UiFieldNodeItem.NodeName,Mode=TwoWay}"   >
                                    </TextBlock>                                    
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                  

                  
                        <!--value name coclumn-->
                        <DataGridTextColumn Header="Value" Width="*" Binding="{Binding TestStepFieldActionValue}" />

                        <!--step description coclumn-->
                        <DataGridTextColumn Header="Description" Width="*" Binding="{Binding TestStepDescription}" />

                        
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>
        </StackPanel>

    </DockPanel>
</UserControl>
